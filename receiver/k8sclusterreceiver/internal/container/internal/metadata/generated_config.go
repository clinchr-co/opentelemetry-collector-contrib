// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for k8s/container metrics.
type MetricsConfig struct {
	K8sContainerCPULimit   MetricConfig `mapstructure:"k8s.container.cpu_limit"`
	K8sContainerCPURequest MetricConfig `mapstructure:"k8s.container.cpu_request"`
	K8sContainerReady      MetricConfig `mapstructure:"k8s.container.ready"`
	K8sContainerRestarts   MetricConfig `mapstructure:"k8s.container.restarts"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		K8sContainerCPULimit: MetricConfig{
			Enabled: true,
		},
		K8sContainerCPURequest: MetricConfig{
			Enabled: true,
		},
		K8sContainerReady: MetricConfig{
			Enabled: true,
		},
		K8sContainerRestarts: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesConfig provides config for k8s/container resource attributes.
type ResourceAttributesConfig struct {
	ContainerID            ResourceAttributeConfig `mapstructure:"container.id"`
	ContainerImageName     ResourceAttributeConfig `mapstructure:"container.image.name"`
	ContainerImageTag      ResourceAttributeConfig `mapstructure:"container.image.tag"`
	K8sContainerName       ResourceAttributeConfig `mapstructure:"k8s.container.name"`
	K8sNamespaceName       ResourceAttributeConfig `mapstructure:"k8s.namespace.name"`
	K8sNodeName            ResourceAttributeConfig `mapstructure:"k8s.node.name"`
	K8sPodName             ResourceAttributeConfig `mapstructure:"k8s.pod.name"`
	K8sPodUID              ResourceAttributeConfig `mapstructure:"k8s.pod.uid"`
	OpencensusResourcetype ResourceAttributeConfig `mapstructure:"opencensus.resourcetype"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		ContainerID: ResourceAttributeConfig{
			Enabled: true,
		},
		ContainerImageName: ResourceAttributeConfig{
			Enabled: true,
		},
		ContainerImageTag: ResourceAttributeConfig{
			Enabled: true,
		},
		K8sContainerName: ResourceAttributeConfig{
			Enabled: true,
		},
		K8sNamespaceName: ResourceAttributeConfig{
			Enabled: true,
		},
		K8sNodeName: ResourceAttributeConfig{
			Enabled: true,
		},
		K8sPodName: ResourceAttributeConfig{
			Enabled: true,
		},
		K8sPodUID: ResourceAttributeConfig{
			Enabled: true,
		},
		OpencensusResourcetype: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for k8s/container metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}
